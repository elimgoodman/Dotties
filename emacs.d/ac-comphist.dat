((("json-resp" .
   [2 0 0 0 0 0 0 0 0])
  ("anything-match-plugin" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("Type" .
   [1 0 0 0])
  ("spiral.records" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("rec" .
   [1 0 0])
  ("spiral.core" .
   [0 0 0 0 0 0 0 0 0 0 1])
  ("replaced-text" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("read-string" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("eval" .
   [1 0 0 0])
  ("my-vals" .
   [1 0 0 0 0 0 0])
  ("my-val" .
   [1 0 0 0 0 0])
  ("nil?" .
   [1 0 0 0])
  ("or" .
   [1 0])
  ("not" .
   [1 0 0])
  ("replace-vars-in-tmpl" .
   [0 0 0 0 0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 0])
  ("re-seq" .
   [1 0 0 0 0 0])
  ("re-find" .
   [1 0 0 0 0 0 0])
  ("body-text" .
   [7 0 0 0 1 1 0 0 0])
  ("str-utils" .
   [1 0 0 0 0 1 1 0 0])
  ("org.clojure/clojure" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0])
  (".setUndecorated" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("s/f" .
   [4 0 0])
  ("alias" .
   [3 0 0 0 0])
  ("seesaw-test.core" .
   [0 0 0 0 0 0 1 2 1 0 0 0 0 0 0 1])
  ("s/show" .
   [0 0 0 0 0 1])
  ("s/pack!" .
   [0 0 0 1 0 0 0])
  ("s/frame" .
   [0 0 0 0 1 0 0])
  ("Person" .
   [0 0 0 1 0 0])
  ("defrecord" .
   [0 0 0 0 0 1 0 0 0])
  ("all-posts" .
   [1 0 0 0 0 0 0 0 0])
  ("posts" .
   [1 0 0 0 0])
  ("render-post" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("post" .
   [2 0 0 0])
  ("defn" .
   [3 0 0 0])
  ("meta" .
   [1 0 0 0])
  ("str" .
   [12 0 0])
  ("map" .
   [3 0 0])
  ("blarg.core/posts" .
   [3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("first" .
   [5 0 0 0 0])
  ("take" .
   [1 0 0 0])
  ("for" .
   [1 0 0])
  ("doc" .
   [1 0 0])
  ("range" .
   [4 0 0 0 0])
  ("blarg.core/post" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 1 3])
  ("blarg.core" .
   [0 0 0 6 2 1 0 0 0 0])
  ("struct" .
   [3 0 0 0 0 0])
  ("println" .
   [10 0 0 0 0 0 0])
  ("global-linum-mode" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("init" .
   [1 0 0 0])
  ("require" .
   [4 0 1 0 0 0 0])
  ("message" .
   [1 0 0 0 0 0 0])
  ("defun" .
   [4 0 0 0 0])
  ("find-file" .
   [1 0 0 0 0 0 0 0 0])
  ("edit-config" .
   [0 0 0 0 0 0 0 0 1 0 0])
  ("switch-to-previous-buffer" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("linum-mode" .
   [0 0 0 0 0 1 0 0 0 0])
  ("click" .
   [0 0 0 0 1])
  ("function" .
   [1 0 0 0 0 0 0 0])
  ("seesaw.dnd" .
   [0 0 0 0 0 0 0 0 0 1])
  ("seesaw.core" .
   [1 0 0 0 0 0 0 0 1 1 3])
  ("seesaw.core/native!" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("seesaw.core/frame" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("-" .
   [1])
  ("->" .
   [5 0])
  ("seesaw." .
   [0 0 0 0 0 0 2])
  ("seesaw.core/pack!" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("seesaw.core/show" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0])
  ("seesaw.core/show!" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("use" .
   [1 0 0])
  ("config" .
   [2 0 0 0 0 0])
  (":title" .
   [4 0 0 0 0 0])
  ("config!" .
   [4 0 0 0 0 0 0])
  ("label" .
   [3 0 0 0 0])
  ("lbl" .
   [2 0 0])
  (":content" .
   [2 0 0 0 0 0 0 0])
  ("scrollable" .
   [0 0 0 0 0 0 0 1 0 0])
  ("lb" .
   [1 0])
  ("*1" .
   [2 0])
  ("display" .
   [0 0 0 0 0 1 0])
  ("area" .
   [0 0 0 1])
  ("java.net.URL." .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("f" .
   [1])
  ("defmacro" .
   [0 0 0 0 0 0 1 0])
  ("name" .
   [1 0 0 0])
  ("body" .
   [2 0 0 0])
  ("replace" .
   [2 0 0 0 1 0 0])
  ("symbol" .
   [5 0 0 0 0 0])
  (":template" .
   [1 0 0 0 0 0 0 0 0])
  (":body" .
   [1 0 0 0 0])
  (":values-ref" .
   [0 0 0 0 0 0 0 0 1 0 0])
  ("values" .
   [6 0 0 0 0 0])
  ("keys" .
   [13 0 0 0])
  ("let" .
   [4 0 0])
  ("vals" .
   [3 0 0 0])
  ("loop" .
   [1 0 0 0])
  ("key" .
   [5 0 0])
  ("val" .
   [4 0 0])
  ("get" .
   [2 0 0])
  ("key-str" .
   [2 0 0 0 0 0 0])
  ("rest" .
   [7 0 0 0])
  ("empty" .
   [2 0 0 0 0])
  ("empty?" .
   [4 0 0 0 0 0])
  ("$a" .
   [1 0])
  ("$b" .
   [1 0])
  ("{:a" .
   [1 0 0])
  (":b" .
   [3 0])
  ("2}" .
   [1 0])
  ("print" .
   [0 0 0 0 1])
  ("my-key" .
   [0 0 0 0 0 1])
  (":a" .
   [1 0])
  ("my-keys" .
   [1 0 1 0 0 0 0])
  ("defpage" .
   [1 0 0 0 0 0 0])
  ("noir.response" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("manifest" .
   [0 0 0 0 1 0 0 0])
  ("param-1" .
   [0 0 0 0 0 1 1])
  ("{:first" .
   [2 0 0 0 0 0 0])
  ("hello" .
   [2 0 0 0 0])
  ("get-arg-value" .
   [0 0 0 0 0 1 1 0 0 0 0 0 0])
  ("stmt" .
   [2 0 0 0])
  ("Statement" .
   [1 0 0 0 0 0 0 0 0])
  ("execute-statement" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("nested-stmt" .
   [0 0 0 0 1 0 0 0 0 0 0])
  ("{}" .
   [1 0])
  (":require" .
   [0 0 0 0 0 1 0 0])
  ("anything" .
   [1 0 0 0 0 0 0 0])
  ("anything-config" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])))
